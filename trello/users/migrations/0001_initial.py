# Generated by Django 5.1.7 on 2025-04-01 09:28

import django.core.validators
import django.db.models.deletion
import users
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('Отдел продаж', 'Отдел продаж'), ('Отдел поддержки клиентов', 'Отдел поддержки клиентов'), ('Отдел разработки', 'Отдел разработки'), ('Отдел маркетинга', 'Отдел маркетинга'), ('Отдел кадров', 'Отдел кадров'), ('Финансовый отдел', 'Финансовый отдел'), ('Юридический отдел', 'Юридический отдел'), ('IT-отдел', 'IT-отдел'), ('Отдел логистики', 'Отдел логистики'), ('Административный отдел', 'Административный отдел'), ('Отдел технической поддержки', 'Отдел технической поддержки')], max_length=255, verbose_name='Название департамента')),
                ('department_id', models.CharField(default=users.services.generate_id_service.GenerateIDService.generate_unique_department_id, max_length=6, unique=True, validators=[django.core.validators.MinLengthValidator(6)], verbose_name='Идентификатор департамента')),
            ],
        ),
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('login', models.CharField(db_index=True, max_length=100, unique=True, verbose_name='Логин сотрудника')),
                ('first_name', models.CharField(max_length=100, verbose_name='Имя')),
                ('last_name', models.CharField(max_length=100, verbose_name='Фамилия')),
                ('surname', models.CharField(max_length=100, verbose_name='Отчество')),
                ('date_of_birth', models.DateField(blank=True, null=True, verbose_name='Дата рождения')),
                ('email', models.EmailField(db_index=True, max_length=100, unique=True, validators=[django.core.validators.EmailValidator], verbose_name='Электронная почта')),
                ('role', models.CharField(choices=[('Менеджер', 'Менеджер'), ('Разработчик', 'Разработчик'), ('Тестировщик', 'Тестировщик')], default='Разработчик', max_length=100, verbose_name='Роль сотрудника')),
                ('status', models.CharField(choices=[('Работает', 'Работает'), ('В отпуске', 'В отпуске'), ('Уволен', 'Уволен')], default='Работает', max_length=50, verbose_name='Статус сотрудника')),
                ('hire_date', models.DateField(auto_now_add=True, verbose_name='Дата приема на работу')),
                ('is_staff', models.BooleanField(default=False, verbose_name='Доступ в админку')),
                ('termination_date', models.DateField(blank=True, null=True, verbose_name='Дата увольнения')),
                ('department', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='department_employees', to='users.department', verbose_name='Департамент сотрудника')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ManagerDepartment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('assigned_at', models.DateField(auto_now_add=True, verbose_name='Дата назначения')),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.department', verbose_name='Департамент')),
                ('manager', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Руководитель')),
            ],
            options={
                'constraints': [models.UniqueConstraint(fields=('manager', 'department'), name='unique_manager_department')],
            },
        ),
    ]
